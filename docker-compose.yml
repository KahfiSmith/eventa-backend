version: '3.8'

services:
  # Backend API Service
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: eventa-api
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../uploads:/app/uploads
      - ../logs:/app/logs
    networks:
      - eventa-network

  # PostgreSQL Database with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: eventa-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME:-eventa_db}
      - POSTGRES_USER=${DB_USER:-eventa}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-eventa} -d ${DB_NAME:-eventa_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eventa-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: eventa-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - eventa-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: eventa-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - eventa-network

volumes:
  postgres_data:
  redis_data:

networks:
  eventa-network:
    driver: bridge